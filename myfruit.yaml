openapi: "3.0.0"
info:
  version: 1.0.0
  title: My Fruit Store
  description: A API that demonstrates fruit store operations
  termsOfService: https://sridcloud.com/terms/
  contact:
    name: Sridhar Venkat
    email: sridcloud@gmail.com
    url: https://sridcloud.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost/api
paths:
  /fruits:
    get:
      summary: Returns all fruits
      description: |
        Returns all fruits from the store
      operationId: findFruits
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: fruit response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fruit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a new fruit
      description: Creates a new fruit in the store. Duplicates are allowed
      operationId: addFruit
      requestBody:
        description: Fruit to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewFruit'
      responses:
        '200':
          description: fruit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      summary: Returns a fruit by ID
      description: Returns a fruit based on a single ID
      operationId: findFruitByID
      parameters:
        - name: id
          in: path
          description: ID of fruit to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: fruit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a fruit by ID
      description: Update a fruit based on a single ID
      operationId: updateFruitByID
      parameters:
        - name: id
          in: path
          description: ID of fruit to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: fruit update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a fruit by ID
      description: Delete a single fruit by ID provided
      operationId: deleteFruit
      parameters:
        - name: id
          in: path
          description: ID of fruit to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: fruit deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Fruit:
      allOf:
        - $ref: '#/components/schemas/NewFruit'
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64
              description: Unique id of the fruit

    NewFruit:
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the fruit
        tag:
          type: string
          description: Type of the fruit
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message